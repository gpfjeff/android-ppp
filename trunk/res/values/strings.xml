<?xml version="1.0" encoding="utf-8"?>
<resources>
    <string name="app_name">Perfect Paper Passwords</string>
	<string name="meta_replace_token">xxx</string>
	<string name="meta_replace_token2">yyy</string>
    <string name="about_link">https://code.google.com/p/android-ppp/</string>
    <string name="about_copyright">Copyright 2011, Jeffrey T. Darlington.</string>
    <string name="cardset_edit_pclength_prompt">Passcode length</string>
    <string name="cardset_list_main_label">Available Card Sets</string>
    <string name="cardset_list_new_btn">New</string>
    <string name="cardset_list_empty_text">Welcome to Perfect Paper Passwords. If you need help with any particular function of this application, tap the <b>Menu</b> button and select <b>Help</b>. This will display tutorial text for the current screen.\n\nTo begin using this application, you will need to create one or more card sets. Tap the <b>New</b> or "plus" button above to create a new card set; alternatively, you may tap <b>Menu</b> then <b>New</b>. Once you have created a card set, this screen will display the list of available card sets in the database.\n\nWe strongly advise you to protect your card set database with a password. To set your password, tap <b>Menu</b> then <b>Settings</b>. You will be required to enter this password each time you launch Perfect Paper Passwords.</string>
    <string name="cardview_card_num_prompt">Card xxx</string>
    <string name="cardview_passcode_copied">Passcode at xxx copied to the clipboard.</string>
    <string name="cardview_gesture_library_error">ERROR: Could not load gesture library. Gestures currently disabled.</string>
    <string name="dialog_clear_password">Are you sure you wish to clear your password? Doing so will delete all data from the database!</string>
    <string name="dialog_clear_strikes_title">Clear Strikes</string>
    <string name="dialog_clear_strikes_all_success">Strikes for all cards in this card set have been cleared.</string>
    <string name="dialog_clear_strikes_all_failure">ERROR: Strikes for the current card set could not be cleared.</string>
    <string name="dialog_clear_strikes_current_success">Strikes for the current card have been cleared.</string>
    <string name="dialog_clear_strikes_current_failure">ERROR: Strikes for the current card could not be cleared.</string>
    <string name="dialog_confirm_clear_all_strikes_title">Confirm Clear All Strikes</string>
    <string name="dialog_confirm_clear_all_strikes_prompt">Are you sure you wish to clear all strike-out data from the card set \"xxx\"?</string>
    <string name="dialog_confirm_clear_all_strikes_success">The strike-out data for card set \"xxx\" has been successfully deleted.</string>
    <string name="dialog_confirm_clear_all_strikes_failure">ERROR: The strike-out data for card set \"xxx\" could not be deleted.</string>
    <string name="dialog_confirm_delete_title">Confirm Delete</string>
    <string name="dialog_confirm_delete_prompt">Are you sure you wish to delete the card set \"xxx\"?</string>
    <string name="dialog_confirm_delete_success">The card set \"xxx\" has been successfully deleted.</string>
    <string name="dialog_confirm_delete_failure">ERROR: The card set \"xxx\" could not be deleted.</string>
    <string name="dialog_confirm_delete_all_title">Confirm Delete All</string>
    <string name="dialog_confirm_delete_all_prompt">Are you sure you wish to delete all card set data? This cannot be undone!</string>
    <string name="dialog_confirm_delete_all_success">All card set data has been successfully deleted.</string>
    <string name="dialog_confirm_delete_all_failure">ERROR: Some card set data could not be deleted.</string>
    <string name="dialog_generating_passwords">Generating passcodes...</string>
    <string name="dialog_goto_card_title">Go To Card</string>
    <string name="dialog_goto_card_go_btn">Go</string>
    <string name="dialog_goto_card_cancel_btn">Cancel</string>
    <string name="dialog_password_set_title">Set New Password</string>
    <string name="dialog_password_set_btn">Set</string>
    <string name="dialog_password_set_success">Your new password was set successfully.</string>
    <string name="dialog_password_set_failure">ERROR: Your new password could not be set.</string>
    <string name="dialog_password_confirm_title">Confirm New Password</string>
    <string name="dialog_password_confirm_btn">Confirm</string>
    <string name="dialog_password_clear_title">Enter Password to Clear</string>
    <string name="dialog_password_clear_btn">Clear</string>
    <string name="dialog_password_clear_success">Your password was successfully cleared.</string>
    <string name="dialog_password_clear_failure">ERROR: Your password could not be cleared.</string>
    <string name="dialog_password_cancel_btn">Cancel</string>
    <string name="dialog_rename_title">Rename Card Set</string>
    <string name="dialog_rename_rename_btn">Rename</string>
    <string name="dialog_rename_success">Card set \"xxx\" has been successfully renamed to \"yyy\".</string>
    <string name="dialog_rename_failure">ERROR: Card set \"xxx\" could not be renamed.</string>
    <string name="dialog_rename_invalid_name">ERROR: Card set names must be non-empty.</string>
    <string name="dialog_progress_encrypting_title">Encrypting sequence keys...</string>
    <string name="dialog_progress_decrypting_title">Decrypting sequence keys...</string>
    <string name="dialog_progress_encrypting_error">An error occurred while encrypting the sequence keys. Database may be corrupted.</string>
    <string name="dialog_progress_decrypting_error">An error occurred while decrypting the sequence keys. Database may be corrupted.</string>
    <string name="menu_cardset_options_title">Card Set Options</string>
    <string name="menu_cardset_options_details">Details</string>
    <string name="menu_cardset_options_rename">Rename</string>
    <string name="menu_cardset_options_clear_strikes">Clear Strikes</string>
    <string name="menu_cardset_options_delete">Delete</string>
    <string name="new_card_name_label">Card Set Name:</string>
    <string name="new_card_name_default">Unnamed Card Set</string>
    <string name="new_card_numcols_label">Number of Columns:</string>
    <string name="new_card_numrows_label">Number of Rows:</string>
    <string name="new_card_pclength_label">Passcode Length:</string>
    <string name="new_card_alphabet_label">Alphabet:</string>
    <string name="new_card_seqkey_label">Sequence Key:</string>
    <string name="new_card_create_btn">Create Card Set</string>
    <string name="new_card_success">Card set \"xxx\" has been saved successfully.</string>
    <string name="new_card_failure">ERROR: Card set \"xxx\" could not be saved to the database.</string>
    <string name="cardset_details_last_card">Last Card:</string>
    <string name="cardset_details_toggle_count">Total Strike-Outs:</string>
    <string name="single_pc_cardnum_label">Card Number</string>
    <string name="single_pc_row_label">Row</string>
    <string name="single_pc_column_label">Column</string>
    <string name="optmenu_about">About</string>
    <string name="optmenu_clear_password">Clear Password</string>
    <string name="optmenu_clear_strikes">Clear</string>
    <string name="optmenu_delete_all">Delete All</string>
    <string name="optmenu_details">View Details</string>
    <string name="optmenu_goto">Go To</string>
    <string name="optmenu_help">Help</string>
    <string name="optmenu_license">View Full License</string>
    <string name="optmenu_new">New</string>
    <string name="optmenu_settings">Settings</string>
    <string name="optmenu_view">View Last Card</string>
    <string name="password_version_label">Version xxx</string>
    <string name="password_prompt_label">Please enter your password:</string>
    <string name="password_prompt_hint">Enter your password here</string>
    <string name="password_unlock_btn">Unlock</string>
    <string name="settings_password_prompt">You can specify a password to control access to this application. Passwords are stored using a one-way cryptographic hash and therefore cannot be recovered. If you forget your password, you can chose to clear it at the password prompt, but doing so will destroy all card set data in the database. You can also clear your password here after you have authenticated without destroying your data.</string>
    <string name="settings_password_btn_set">Set Password</string>
    <string name="settings_password_btn_clear">Clear Password</string>
    <string name="settings_copy_passcodes_chk">Copy Passcodes to Clipboard</string>
    <string name="error_card_build_failed">ERROR: Error building passcodes</string>
    <string name="error_cardset_not_found">ERROR: The specified card set could not be found.</string>
    <string name="error_database_cleared_clear_password_failed">ERROR: The database was cleared, but the password could not be cleared.</string>
    <string name="error_database_not_cleared_clear_password_failed">ERROR: The database could not be cleared. The password has not been cleared.</string>
    <string name="error_invalid_alphabet">ERROR: Alphabet field cannot be empty. Each character may only be used once.</string>
    <string name="error_invalid_card_num">ERROR: Invalid card number</string>
    <string name="error_invalid_password">The password you have entered is invalid. Please try again.</string>
    <string name="error_invalid_num_columns">ERROR: Number of columns field must contain a positive integer greater than 0 and less than 27.</string>
    <string name="error_invalid_num_rows">ERROR: Number of rows field must contain a positive integer greater than zero.</string>
    <string name="error_invalid_seqkey">ERROR: Sequence key must be a hexadecimal string 64 characters long.</string>
    <string name="error_invalid_card_width">ERROR: This combination of passcode length and number of columns will create a card that is too wide to display. Please change one of these values.</string>
    <string name="error_name_field_empty">ERROR: Name field cannot be empty.</string>
    <string name="error_new_card_launch">ERROR: An error has occurred while launching the new card set activity.</string>
    <string name="error_new_password_empty">ERROR: Passwords cannot be empty.</string>
    <string name="error_new_password_nomatch">ERROR: Passwords did not match.</string>
    <string name="error_not_implemented">ERROR: This function has not been implemented yet. Sorry!</string>
    <string name="error_unknown">ERROR: An unknown error has occurred.</string>
	<string name="license_short">This program uses code from the jPPP project by Kurt Nelson, which in turn is based a JME phone client by John Graham-Cumming. jPPP is released under the same license as this application: GNU GPL v3. The original Perfect Paper Passwords system was written and designed by Steve Gibson.\n\nThis application also contains code from the Legion of the Bouncy Castle Crypto API, which has been released under the following license:\n\n--------------------------------------\n\nCopyright (c) 2000 - 2011 The Legion Of The Bouncy Castle (http://www.bouncycastle.org)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n--------------------------------------\n\nThis program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.\n\nThis program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License along with this program. If not, see http://www.gnu.org/licenses/.</string>
	<string name="license_full_url">http://www.gnu.org/licenses/gpl-3.0-standalone.html</string>
	<string name="help_title">Perfect Paper Passwords Help</string>
	<string name="help_back_prompt"><i>Tap <b>Back</b> to return to the previous screen.\n</i></string>
	<string name="help_text_intro">Welcome to Perfect Paper Passwords for Android! Perfect Paper Passwords is a unique one-time-only password solution developed by Steve Gibson of the Gibson Research Corporation. The goal of PPP is to create a relatively simple and easy to implement, yet extremely secure system for creating one-time-use passwords or \"passcodes\" which will be used once and never used again. Adding such a one-time-use passcode system to an existing authentication scheme can vastly improve its security. Similar to using client-side certificates or Smart Cards as \"something you have\" in addition to a password (\"something you know\"), PPP provides a multi-factor authentication solution.\n\nTo make this system even better, it is relatively easy to implement and execute. While Mr. Gibson\'s personal source code is closed, the specification for the system is open and many third-party implementations have been created that are Open Source. The system is built on open technologies such as familiar cryptographic hashing and encryption algorithms.\n\nPPP is <b><i>NOT</i></b> a \"password vault\"; it cannot \"remember\" arbitrary passwords for you, nor does it generate such passwords. In order to use PPP, there must be a <b>server-side authentication module</b> and database and a <b>client-side \"card\"</b>. The server keeps track of the PPP parameters and the current state of the sequence of passcodes. For the user, \"cards\" may be printed or otherwise stored that contain one segment of the sequence of passcodes. After initial authentication, the server-side component should provide the user with the facility to generate additional cards for later use.\n\nWhile the original intent of the system was to produce physical, printed cards containing these passcodes, several of the third-party applications developed around PPP include clients that generate passcodes on the fly based on the sequence parameters. This project attempts to straddle the line between these ideas, generating passcodes only as they are required (without storing them, making them more secure) while keeping the physical \"card\" metaphor, complete with the concept of passcode use history.\n\nPPP for Android cannot be used on its own to store arbitrary passwords. If the service your are authenticating against uses PPP as part of its authentication mechanism, then you can use PPP for Android in lieu of using printed passcode cards. If the service you are authenticating against does not use PPP, feel free to contact the system administrator of this service and suggest PPP as a simple way of increasing login security. However, you will not be able to use PPP for authentication until the service decides to implement it.\n\nIn order to get started using PPP for Android, you just specify one or more card sets. These are the basic parameters required to generating passcode cards. Since there are no card sets saved in the database yet, you will only see a brief bit of introductory text and a button to add a new card set. Tap this button to create a new card set, or tap <b>Menu</b> followed by <b>New</b> to begin the process. If you need help on the following screen, tap <b>Menu</b> there then <b>Help</b> to access the help text for that screen.\n\nOnce you have one or more card sets in the database, the introductory text on the main menu will disappear and be replaced by the list of card sets in the database. When this occurs, tap <b>Menu</b> then <b>Help</b> to get more information about what you can do with these card sets.\n\nWe strongly advise you to protect your card set database with a password. To set your password, tap <b>Menu</b> then <b>Settings</b> from any screen. You will be required to enter this password each time you launch PPP for Android. It will also be used to encrypt your card set data in the database to prevent it from being stolen or compromised. Forgotten passwords cannot be recovered, so make sure to memorize your password or otherwise protect it so you cannot lose it. You can learn more about setting, changing, and clearing the password in the help for the Settings screen.</string>
	<string name="help_text_cardset_list">The <b>Available Card Sets</b> screen is the \"main menu\" for PPP for Android. From this screen, you may select any of the card sets stored in your database, as well as add, modify, and delete card sets. This is also your launching point for accessing individual PPP cards.\n\nAt the top of the screen is a <b>New</b> or \"plus\" button. Tap this button to create a new card set. Alternatively, you may also tap <b>Menu</b> then <b>New</b> to accomplish the same task. Either action will launch the <b>New Card Set</b> screen, where you can specify the parameters for the new card set.\n\nThe main body of the screen is a scrolling list of all card sets in the database. The card sets are listed alphabetically. Tapping on a card set name launches the <b>Card View</b> screen by default, which is where you will view individual cards and generate passcodes. You may tap <b>Back</b> from the <b>Card View</b> screen to return to the <b>Available Card Sets</b> screen.\n\nIf you \"long press\" a card set name, you will launch a context menu dialog. From this menu, you can perform the following actions:\n\n<b>Details</b>: Launches the <b>Card Set Details</b> screen, where you can view the card set\'s parameters in read-only mode;\n\n<b>Rename</b>: Opens a dialog box where you can assign a new name to the selected card set;\n\n<b>Clear Strikes</b>: Deletes all \"strike out\" data in the database for the selected card set, but leaves all other parameters intact;\n\n<b>Delete</b>: Deletes the card set and all \"strike out\" data from the database.\n\nThe <b>Clear Strikes</b> and <b>Delete</b> options will display a confirmation dialog before these actions are performed.\n\nTapping the <b>Menu</b> button on your device provides the following additional options:\n\n<b>New</b>: Launches the <b>New Card Set</b> screen to create a new card set;\n\n<b>Delete All</b>: Deletes all card set data from the database, <i>which cannot be undone</i> (a confirmation dialog is displayed before this action is performed);\n\n<b>Settings</b>: Launches the <b>Settings</b> screen, where you can set a password or configure additional options;\n\n<b>Help</b>: Displays this help screen;\n\n<b>About</b>: Displays copyright, credits, version, licensing information about PPP for Android.</string>
	<string name="help_text_settings">The <b>Settings</b> screen allows you to configure PPP for Android to suit your preferences. There are currently has two options provided here, although more may be added later as they are needed.\n\nWhen PPP for Android is first installed, no password is set to protect your data. The <b>Set Password</b> button here provides a means of setting that password. PPP for Android uses your password in two ways. First, the password protects access to the application by \"locking\" it from unauthorized use. Once a password has been set, you will not be able to launch PPP for Android unless you provide the password first. Anytime you leave PPP for Android and come back, you will be prompted to enter your password.\n\nThe second way your password will be used is to encrypt the sequence keys to your card set data. A pseudo-random encryption key will be generated from your password and used to encrypt all sequence keys in the database. Once encrypted, these sequence keys will be protected from malicious attackers who may try to steal the PPP for Android database and extract your card set parameters. The sequence keys will remain encrypted and will be decrypted on the fly whenever they are needed.\n\nYour password will <i>NEVER</i> be stored directly. The password will be obscured using a series of one-way cryptographic hashes, making the original password text unrecoverable. The obscured password will be stored in the PPP for Android preferences file on your device. Because we use cryptographic hashes, forgotten passwords will not be recoverable. If you forget your password, you will be forced to destroy and wipe clean your entire PPP for Android database to protect the encrypted data.\n\nTo set a password, tap the <b>Set Password</b> button. You will be required to enter your password twice while setting it to ensure that you have typed it in correctly. Note that if you have many card sets saved in the database, it may take a while to encrypt all the sequence keys. A dialog box will appear showing the progress for this process.\n\nOnce a password has been set, you can clear that password by returning to the <b>Settings</b> screen. The <b>Set Password</b> button will change to a <b>Clear Password</b> button. In order to clear your password, you will have to enter it again as confirmation. Clearing your password will decrypt all sequence keys in the database, meaning they will now be stored in the clear and may be vulnerable to attack if your device is compromised. You will no longer be prompted for a password when you launch PPP for Android.\n\nTo change a password, you will first have to clear it by tapping <b>Clear Password</b>, then set the new password by tapping <b>Set Password</b>.\n\nThe <b>Copy Passcodes to Clipboard</b> checkbox controls one of PPP for Android\'s many conveniences. By default, when you \"toggle\" or \"strike out\" a passcode on a card, PPP for Android copies the value of the passcode to the system clipboard. You may then navigate to whatever other app you are using that requires authentication (say, a website in your web browser) and paste the passcode into the authentication form. Since PPP passcodes tend to be difficult to memorize, this makes it easier for the user to use them. However, it does pose a potential security risk. Once put on the clipboard, passcodes will remain there until some other data is copied to the clipboard to overwrite it. Since any application may read the contents of the clipboard, your passcode may be visible to any number of malicious applications that may be installed on your device. While this is mitigated somewhat by the fact that PPP passcodes are intended to be used only once, this risk cannot be ignored.\n\nFor greater security, you can disable this functionality by clearing this checkbox. Once cleared, passcodes will not be copied to the clipboard when a passcode is \"stricken\". You may restore the default behavior at any time by returning to the <b>Settings</b> screen and checking this box again.</string>
	<string name="help_text_password_prompt">This installation of Perfect Paper Passwords for Android is currently protected by a password. The card set parameters within the PPP for Android database are encrypted and thus cannot be recovered until the password is provided. In order to use this application, you must provide the password set from within the <b>Settings</b> screen. Enter the password in the text box provided and tap <b>Unlock</b> to unlock the database.\n\nIf you have forgotten your password, you may clear it at the expense of destroying all data in the card set database. This destructive wipe helps ensure the security of the data currently stored in the system. To clear the password and destroy all card set data, tap <b>Menu</b> then <b>Clear Password</b>. You must confirm this action before it will be performed.</string>
	<string name="help_text_new_cardset">This screen is your primary interface for adding new card sets to the PPP for Android database. PPP card sets consist of a series of parameters that will be used to generate your PPP cards\n\nWith the exception of the card set name, all parameters listed here <b><i>MUST MATCH</i></b> the parameters defined for the server you are authenticating with. These parameters may be generated for you by the service, meaning you must enter those parameters here <i>exactly</i> as the authenticating service provides them. Alternatively, the service may let you set these parameters; in this case, you may enter whatever you wish on this screen, so long as you enter the <i>exact same</i> parameters on the authenticating server. Which way these parameters are defined is a matter for you to discuss with the authenticating service; we cannot help you with this setup. However, once you and the authenticating server have reached an agreement on these parameters, you must specify them here in order to define the card set within PPP for Android.\n\nOnce a card set has been defined, its parameters cannot be edited. Only the card set name and any \"strike out\" data may be changed after the card set has been created. Modifying any of the other parameters would change the fundamental structure of the card set, invalidating any \"strike out\" data currently stored in the database and essentially creating a new card set anyway. If you discover that you must modify a card set\'s parameters, you must create a new card set with the new parameters and delete the old card set. Card sets may be deleted from the <b>Available Card Sets</b> screen.\n\nA card set consists of the following parameters:\n\nThe <b>Card Set Name</b> is a convenience field and is only used within PPP for Android. This is the name you will see on the <b>Available Card Sets</b> screen to help you identify the card set. You may name the card set whatever you wish, so long as it helps you identify the set from all the others in the list. Since PPP for Android identifies card sets by an hidden internal identifier, you may even give several card sets the same name, although this is not recommended as it may lead to confusion. Card sets may be renamed at any time from the <b>Available Card Sets</b> screen.\n\nThe <b>Number of Columns</b>, <b>Number of Rows</b>, and <b>Passcode Length</b> parameters define the size and structure of each individual card. Each card is divided into columns and rows, with each cell in the resulting table holding a single passcode. All three of these parameters must be positive integers (whole numbers greater than zero). By definition in the PPP specification, the passcode length must be between 2 and 16 characters. The number of columns and rows are more flexible and may technically be any integer greater than one, but PPP for Android places a number of restrictions on these fields beyond what the PPP spec stipulates.\n\nDue to the size limitations of mobile devices as well as implementation constraints placed by the Android operating system, only certain combinations of columns, rows, and passcode length can be used. Such constraints are not necessary for printed cards which can theoretically be of any size. However, at a certain point the combination of these variables along with screen and font size make certain combinations impractical or even impossible. PPP for Android was designed to display the \"standard\" or \"default\" PPP card size--7 columns, 10 rows, and a passcode length of 4 characters--on a single screen for the \"average\" Android smartphone in portrait orientation (i.e. taller than wide). We then developed a formula to determine which combinations of columns, rows, and passcode length would work given the screen and font sizes specified.\n\nIf you attempt to use a combination of these parameters that PPP for Android cannot display, you will receive a small alert \"toast\" informing of the problem. You will also be unable to create the card set by tapping the <b>Create Card Set</b> button. To correct this, change one or more of the parameters until you no longer receive these alerts. Note that the text boxes must \"lose focus\" in order for the validation check to occur.\n\nAs for the values of these fields themselves, they may be whatever you wish within the above parameters, so long as they match with the authenticating server. Column and row numbers primarily affect how a card is displayed, but passcode length will determine how long the generated passcodes will be. The longer a passcode is, the stronger it technically becomes, but the more difficult it will be to work with. Conversely, shorter passcodes are more convenient but less secure. The default passcode length of 4 characters should be sufficient for most circumstances, especially since each passcode will only be used once.\n\nThe <b>Alphabet</b> defines the characters used in generating passcodes. The default 64-character alphabet specified in the PPP spec will be populated in this field when this screen opens. This alphabet was carefully chosen because it contains a relatively large set of characters that cannot be easily confused (i.e. it removes characters like the number one, the lower-case L, and upper-case I, all of which can be confused with each other in certain fonts). This alphabet should be sufficient for most use cases, but can be modified if desired. PPP for Android enforces that alphabets must be non-empty, must not consist entirely of white space, must be at least two characters long, and each character may only appear once in the string.\n\nThe <b>Sequence Key</b> must be a 64-character hexadecimal string, ideally of random or pseudo-random data. A random sequence key is generated each time the new card set screen is opened. You may, of course, replace this with any value provided by your authenticating service, provided that it matches the 64-hex-digit restriction. Capitalization does not matter with respect to alphabetic digits (i.e. A through F); these will be capitalized by default before being stored.\n\nOnce you have defined your card set, tap the <b>Create Card Set</b> button to save the parameters to the database. If you have set a password for PPP for Android, the sequence key will be encrypted before it is stored; otherwise it will be stored unencrypted. Once the card set has been saved, you will be returned to the <b>Available Card Sets</b> screen.</string>
	<string name="help_text_details">The <b>Card Set Details</b> screen provides a read-only display of the parameters defining the selected card set, as well as a few statistics. It displays:\n\n* The card set name;\n* The last card displayed;\n* The total number of \"strike outs\";\n* The number of columns and rows;\n* The passcode length;\n* The alphabet used for passcode generation;\n* The unencrypted sequence key.\n\nThe sequence key is always displayed in its unencrypted from here. If you set a password to protect PPP for Android from unauthorized access, the sequence key will remain encrypted in the database but will be decrypted on the fly to be displayed here.\n\nTapping the <b>Menu</b> button on your device displays the following options:\n\n<b>View Last Card</b>: Launches the <b>Card View</b> screen displaying the last card in the set that was displayed;\n\n<b>Rename</b>: Opens a dialog box where you can specify a new display name for the card set;\n\n<b>Clear Strikes</b>: Deletes all \"strike out\" data from the database for this card set but leaves all other parameters intact;\n\n<b>Delete</b>: Deletes the card set and all \"strike out\" data from the database, <i>which cannot be undone;</i>\n\n<b>Help</b>: Displays this help screen.\n\nThe <b>Clear Strikes</b> and <b>Delete</b> options display a confirmation dialog before these actions are performed. Tapping the <b>Back</b> button on your device returns you to the previous screen.</string>
	<string name="help_text_cardview">The <b>Card View</b> screen is your primary interface with PPP passcodes. It displays a single card in a PPP card set, defaulting to the last card displayed. At the top of the screen is the card set name, under which appears two navigation buttons and the current card number. Beneath this header is the actual PPP card.\n\nTo navigate to the next card in the set, you may do one of the following:\n\n* Tap the <b>&gt;&gt;</b> (\"next\") button;\n* Swipe your finger across the card from right to left.\n\nTo navigate to the previous card in the set, you may:\n\n* Tap the <b>&lt;&lt;</b> (\"previous\") button;\n* Swipe your finger across the card from left to right.\n\nYou may navigate to any card in the sequence by tapping <b>Menu</b> then <b>Go To</b>. This will launch a dialog box with a single text box. You may enter any positive integer (whole number greater than zero) between 1 and 2,147,483,647. Tap <b>Go</b> to navigate to the selected card.\n\nAnytime you navigate from one card to another, the \"last card\" attribute of the set will be updated in the database. PPP for Android will remember which card was last displayed and reload that card the next time you open the card set.\n\nThe card itself is displayed as a grid divided by columns and rows. Columns are designated by letters while rows are designated by numbers. Thus, passcode \"D6\" can be found by going across to the fourth column (\"D\") and down to the sixth row. Passcodes are usually identified by card number, column, and row, such as \"Card 12, Passcode D6\".\n\nThe passcodes themselves are actually \"toggle buttons\" which can be activated by touch. Tapping a passcode causes it to be \"struck through\" with a red line. When a passcode is \"struck through\", its state is written into the database. Thus, PPP for Android remembers the state of each passcode and will restore all \"strikes\" on a given card when that card is displayed. In this way you can see the history of the passcodes you have used over time. Unlike real paper cards, however, you can \"clear a strike\" by tapping the passcode again, removing the red line. Thus if you accidentally \"strike out\" the wrong passcode it is easy to fix.\n\nBy default, PPP for Android will copy the value of a passcode to the system clipboard whenever the passcode is \"stricken\". This is a convenience feature, allowing you to paste the passcode into an authentication form without having to memorize it or write it down. This does, however, pose a potential security risk as any application, including malicious ones, can read or write to the system clipboard, potentially exposing your passcode to any running process on the device. If you wish to operate more securely or simply do not need this feature, you may turn it off from the <b>Settings</b> screen, which can be access via <b>Menu</b> then <b>Settings</b>.\n\nOrdinarily, PPP for Android will let you rotate your device and will compensate by redrawing the card in the new orientation. Some card sets, however, may have parameter combinations that will not display properly in portrait orientation (that is, taller than it is wide). In these situations, PPP for Android will force the card to be displayed in landscape orientation (wider that it is tall) regardless of how the device is actually oriented. If your card set requires landscape orientation, simply rotate the device until the card displays properly. Also note that if the number of rows exceeds the size of the display, you may need to scroll down to see the additional rows.\n\nIn addition to the menu items already listed, tapping <b>Menu</b> presents the following options:\n\n<b>View Details</b>: Displays the <b>Card Set Details</b> screen, a read-only view of the card set parameters;\n\n<b>Clear</b>: Launches a dialog that allows you to clear all \"strikes\" from either the current card or the entire card set;\n\n<b>Help</b>: Displays this help screen.</string>
	<string name="help_text_singepasscode_view">The Android operating system classifies different devices by the size of their screen. These generalized sizes are \"small\", \"normal\", \"large\", and \"xlarge\". Your device is classified as \"small\" based on its screen size and density. Unfortunately, due to the limitations of this screen size, your device cannot display the \"card view\" as we originally designed it for PPP for Android. When we tried to fit an entire card with the default parameters on a single screen, the passcodes became too small to read and became difficult to tap with a finger. As a workaround, we introduced this screen, the <b>Single-Passcode View</b>.\n\nThe name of the card set is displayed at the top of the screen. Below this are three controls: <b>Card Number</b>, <b>Column</b>, and <b>Row</b>. These values allow to specify any single passcode in the entire sequence. <b>Card Number</b> may be any positive integer (whole number greater than zero) between 1 and 2,147,483,647. <b>Column</b> and <b>Row</b> are specified by two drop-down lists or \"spinners\", limited by the number of columns and rows specified in the card set parameters. Changing any of these parameters will instantly change the <b>Passcode</b> beneath them.\n\nThe <b>Passcode</b> itself is actually a \"toggle button\" which can be activated by touch. Tapping the passcode causes it to be \"struck through\" with a red line. When a passcode is \"struck through\", its state is written into the database. Thus, PPP for Android remembers the state of each passcode and will restore its \"strike\" when the passcode is displayed again. In this way you can see the history of the passcodes you have used over time. Unlike real paper cards, however, you can \"clear a strike\" by tapping the passcode again, removing the red line. Thus if you accidentally \"strike out\" the wrong passcode it is easy to fix.\n\nBy default, PPP for Android will copy the value of a passcode to the system clipboard whenever the passcode is \"stricken\". This is a convenience feature, allowing you to paste the passcode into an authentication form without having to memorize it or write it down. This does, however, pose a potential security risk as any application, including malicious ones, can read or write to the system clipboard, potentially exposing your passcode to any running process on the device. If you wish to operate more securely or simply do not need this feature, you may turn it off from the <b>Settings</b> screen, which can be access via <b>Menu</b> then <b>Settings</b>.\n\nPPP for Android attempts to load the next passcode after the one last \"stricken\". Since the standard \"card view\" does not record data on individual passcodes aside from its \"stricken\" state, the <b>Single-Passcode View</b> cannot know for certain which passcode was actually the one last toggled. The <b>Single-Passcode View</b> attempts to guess the next passcode by loading the last card displayed, then finding the furthest passcode \"stricken\" by column then row. PPP for Android will then increment the column by one, rolling over the row and even card number if necessary and display that passocde. If this is not the passcode that you need, you can always change the parameters to navigate to the correct one.</string>
	<string-array name="passcodeLengths">
		<item>2</item>
		<item>3</item>
		<item>4</item>
		<item>5</item>
		<item>6</item>
		<item>7</item>
		<item>8</item>
		<item>9</item>
		<item>10</item>
		<item>11</item>
		<item>12</item>
		<item>13</item>
		<item>14</item>
		<item>15</item>
		<item>16</item>
	</string-array>
	<string-array name="clear_toggle_choices">
		<item>This card only</item>
		<item>All cards in set</item>
	</string-array>
</resources>
